@model IEnumerable<SourceCode.Models.Product>

@{
    ViewBag.Title = "Sản phẩm bán chạy";
    Layout = "~/Views/Layout/AdminLayout.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="~/Scripts/bootbox.js"></script>



<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="@Url.Action("Index")">Trang chủ</a> <i class="fa fa-angle-right"></i></li>
    <li class="breadcrumb-item"><a href="@Url.Action("Index")">Chọn hình thức thống kê</a> <i class="fa fa-angle-right"></i></li>
    <li class="breadcrumb-item"><a href="@Url.Action("List")">Sản phẩm bán chạy</a> <i class="fa fa-angle-right"></i></li>
</ol>

<div class="agile-grids">
    <div class="agile-tables">
        <div class="w3l-table-info">
            <h2>Danh sách sản phẩm bán chạy</h2>
            <form action="/StatisticManage/StatisticProductSold" method="get">
                Từ: <input type="date" name="from" value="@ViewBag.from.ToString("yyyy-MM-dd")" />
                Đến: <input type="date" name="to" value="@ViewBag.to.ToString("yyyy-MM-dd")" />
                <input type="submit" value="Xem" class="btn btn-info" />
            </form>
            <ul class="bt-list">
                <li><a href="@Url.Action("DownloadExcelStatisticProductSold","StatisticManage",new { from=ViewBag.from,to=ViewBag.to})" class="hvr-icon-up col-24" style="background-color:green" id="btnAddNew">Xuất Excel</a></li>
            </ul>
            @if (Model != null)
            {
                if (Model.Count() > 0)
                {
                    <table id="table">
                        <thead>
                            <tr>
                                <th>
                                    Tên sản phẩm
                                </th>
                                <th>
                                    Hình ảnh
                                </th>
                                <th>
                                    Số lượng đã bán
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                @Html.Hidden(item.ID.ToString())
                                <tr>
                                    <td style="color:brown">
                                        <b>@Html.DisplayFor(modelItem => item.Name)</b>
                                    </td>
                                    <td>
                                        <img src="@Url.Content("~/Content/images/" + item.Image1)" width="100" height="100" />
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PurchasedCount)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <span>Không có dữ liệu...</span>
                }
            }
            else
            {
                <span>Không có dữ liệu...</span>
            }
        </div>
    </div>
</div>
<div style="display: flex;">
    <div style="flex: 1;">
        <canvas id="myChart" width="1240" height="620" style="display: block;box-sizing: border-box;height: 100px;width: 100px;"></canvas>
    </div>
    <div style="flex: 1;">
        <canvas id="myPieChart" width="200" height="100"></canvas>
    </div>
</div>

<canvas id="myChart" width="200" height="100"></canvas>
<script>
    // Lấy dữ liệu từ Model nếu Model không null
    @if (Model != null)
    {
        <text>
            var productNames = [];
            var purchasedCounts = [];

            @foreach (var item in Model)
            {
                <text>
                    productNames.push('@item.Name');
                    purchasedCounts.push(@item.PurchasedCount);
                </text>
            }
        </text>
    }

    // Tạo biểu đồ sử dụng Chart.js
    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: productNames,
            datasets: [{
                label: 'Số lượng đã bán',
                data: purchasedCounts,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            },
            animation: {
                duration: 2000, // Thời gian của hiệu ứng (ms)
                easing: 'easeInOutQuart', // Kiểu hiệu ứng
            }
        }
    });
</script>

<canvas id="myPieChart" width="200" height="100"></canvas>

<script>
    // Lấy dữ liệu từ Model nếu Model không null
    @if (Model != null)
    {
        <text>
            var productData = [];
            var productLabels = [];

            @foreach (var item in Model)
            {
                <text>
                    productLabels.push('@item.Name');
                    productData.push(@item.PurchasedCount);
                </text>
            }
        </text>
    }

    // Tạo mảng màu sắc riêng biệt cho từng phần tử
    var colors = generateColors(productLabels.length);

    // Tạo biểu đồ hình tròn sử dụng Chart.js
    var ctx = document.getElementById('myPieChart').getContext('2d');
    var myPieChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: productLabels,
            datasets: [{
                data: productData,
                backgroundColor: colors
                
            }]
        },
        options: {
            legend: {
                display: true,
                position: 'right'
            }
        }
    });

    // Hàm tạo mảng màu sắc
    function generateColors(numColors) {
        var colors = [];
        for (var i = 0; i < numColors; i++) {
            colors.push(getRandomColor());
        }
        return colors;
    }

    // Hàm tạo màu ngẫu nhiên
    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }
</script>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-animations"></script>
